{"ast":null,"code":"var _jsxFileName = \"/Users/huydang/Desktop/project102/dragonnest/src/pages/ListingPage.js\";\n// import React, { useState, useEffect } from 'react';\nimport React from 'react';\nimport Listing from '../components/Listing';\nimport room1 from '../assets/room1.jpeg';\nimport room2 from '../assets/room2.jpeg';\nimport room3 from '../assets/room3.jpeg';\nimport '../components/Style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockListings = [{\n  id: 1,\n  imageUrl: room1,\n  hostName: 'Stay with Laura',\n  description: 'Enjoy a bright and comfortable studio in downtown.',\n  bedType: 'Queen bed',\n  price: '$670 month'\n  // ... other listing properties\n}, {\n  id: 2,\n  imageUrl: room2,\n  hostName: 'Stay with Alex',\n  description: 'Spacious two-bedroom with great city views.',\n  bedType: 'Double bed',\n  price: '$788 month'\n  // ... other listing properties\n}, {\n  id: 3,\n  imageUrl: room3,\n  hostName: 'Stay with Roy',\n  description: 'Spacious two-bedroom with great city views.',\n  bedType: 'Two double beds',\n  price: '$788 month'\n  // ... other listing properties\n}\n// ... more mock listings\n];\n\nfunction ListingPage() {\n  // Render the ListingPage component with static data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"listing-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), mockListings.map(listing => /*#__PURE__*/_jsxDEV(Listing, {\n        id: listing.id,\n        imageUrl: listing.imageUrl,\n        title: `Stay with ${listing.hostName}`,\n        hostName: listing.hostName,\n        description: listing.description,\n        bedType: listing.bedType,\n        price: listing.price\n        // Removed onListingClick prop\n      }, listing.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = ListingPage;\nexport default ListingPage;\n\n// function ListingPage() {\n//   const [listings, setListings] = useState([]); // State to hold the list of properties\n//   const [loading, setLoading] = useState(true); // State to track the loading status\n//   const [error, setError] = useState(null); // State to hold any error messages\n\n//   // useEffect to run the fetch operation when the component mounts\n//   useEffect(() => {\n//     const fetchListings = async () => {\n//       try {\n//         // Replace with the actual API call to fetch listings\n//         const response = await fetch('/api/listings');\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         const data = await response.json();\n//         setListings(data); // Set the listings data to state\n//       } catch (error) {\n//         setError(error.message); // If there is an error, set the error state\n//       } finally {\n//         setLoading(false); // Set loading to false once the data fetch is complete\n//       }\n//     };\n//     fetchListings();\n//   }, []); // Empty dependency array means this effect will only run once, similar to componentDidMount\n\n//   // Function to handle when a listing is clicked (e.g., to navigate to a detailed view)\n//   const handleListingClick = (listingId) => {\n//     // Your navigation logic here\n//     console.log('Listing clicked:', listingId);\n//   };\n//   // Render the ListingPage component\n//   return (\n//     <div className=\"listing-page\">\n//       {/* Include the NavBar component */}\n//       <NavBar />\n\n//       {/* Conditionally render the content based on loading status and errors */}\n//       {loading ? (\n//         <div>Loading...</div>\n//       ) : error ? (\n//         <div>Error: {error}</div>\n//       ) : (\n//         <div className=\"listings-container\">\n//           <h1>Search Results</h1>\n//           {/* Map over the listings and render a Listing component for each one */}\n//           {listings.map((listing) => (\n//             <Listing\n//               key={listing.id}\n//               {...listing} // This passes all the properties of the listing object as props to the Listing component\n//               onListingClick={() => handleListingClick(listing.id)}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n// export default ListingPage;\nvar _c;\n$RefreshReg$(_c, \"ListingPage\");","map":{"version":3,"names":["React","Listing","room1","room2","room3","jsxDEV","_jsxDEV","mockListings","id","imageUrl","hostName","description","bedType","price","ListingPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","listing","title","_c","$RefreshReg$"],"sources":["/Users/huydang/Desktop/project102/dragonnest/src/pages/ListingPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\nimport React from 'react';\nimport Listing from '../components/Listing'; \nimport room1 from '../assets/room1.jpeg';\nimport room2 from '../assets/room2.jpeg';\nimport room3 from '../assets/room3.jpeg';\nimport '../components/Style.css'; \n\nconst mockListings = [\n  {\n    id: 1,\n    imageUrl: room1,\n    hostName: 'Stay with Laura',\n    description: 'Enjoy a bright and comfortable studio in downtown.',\n    bedType: 'Queen bed',\n    price: '$670 month'\n    // ... other listing properties\n  },\n  {\n    id: 2,\n    imageUrl: room2,\n    hostName: 'Stay with Alex',\n    description: 'Spacious two-bedroom with great city views.',\n    bedType: 'Double bed',\n    price: '$788 month'\n    // ... other listing properties\n  },\n  {\n    id: 3,\n    imageUrl: room3,\n    hostName: 'Stay with Roy',\n    description: 'Spacious two-bedroom with great city views.',\n    bedType: 'Two double beds',\n    price: '$788 month'\n    // ... other listing properties\n  },\n  // ... more mock listings\n];\n\nfunction ListingPage() {\n  // Render the ListingPage component with static data\n  return (\n    <div className=\"listing-page\">\n      <div className=\"listings-container\">\n        <h1>Search Results</h1>\n        {mockListings.map((listing) => (\n          <Listing\n            key={listing.id}\n            id={listing.id}\n            imageUrl={listing.imageUrl}\n            title={`Stay with ${listing.hostName}`} \n            hostName={listing.hostName}\n            description={listing.description}\n            bedType={listing.bedType}\n            price={listing.price}\n            // Removed onListingClick prop\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ListingPage;\n\n\n\n\n\n\n\n\n\n\n\n\n// function ListingPage() {\n//   const [listings, setListings] = useState([]); // State to hold the list of properties\n//   const [loading, setLoading] = useState(true); // State to track the loading status\n//   const [error, setError] = useState(null); // State to hold any error messages\n\n//   // useEffect to run the fetch operation when the component mounts\n//   useEffect(() => {\n//     const fetchListings = async () => {\n//       try {\n//         // Replace with the actual API call to fetch listings\n//         const response = await fetch('/api/listings');\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         const data = await response.json();\n//         setListings(data); // Set the listings data to state\n//       } catch (error) {\n//         setError(error.message); // If there is an error, set the error state\n//       } finally {\n//         setLoading(false); // Set loading to false once the data fetch is complete\n//       }\n//     };\n//     fetchListings();\n//   }, []); // Empty dependency array means this effect will only run once, similar to componentDidMount\n\n//   // Function to handle when a listing is clicked (e.g., to navigate to a detailed view)\n//   const handleListingClick = (listingId) => {\n//     // Your navigation logic here\n//     console.log('Listing clicked:', listingId);\n//   };\n//   // Render the ListingPage component\n//   return (\n//     <div className=\"listing-page\">\n//       {/* Include the NavBar component */}\n//       <NavBar />\n\n//       {/* Conditionally render the content based on loading status and errors */}\n//       {loading ? (\n//         <div>Loading...</div>\n//       ) : error ? (\n//         <div>Error: {error}</div>\n//       ) : (\n//         <div className=\"listings-container\">\n//           <h1>Search Results</h1>\n//           {/* Map over the listings and render a Listing component for each one */}\n//           {listings.map((listing) => (\n//             <Listing\n//               key={listing.id}\n//               {...listing} // This passes all the properties of the listing object as props to the Listing component\n//               onListingClick={() => handleListingClick(listing.id)}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n// export default ListingPage;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAEP,KAAK;EACfQ,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,oDAAoD;EACjEC,OAAO,EAAE,WAAW;EACpBC,KAAK,EAAE;EACP;AACF,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAEN,KAAK;EACfO,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6CAA6C;EAC1DC,OAAO,EAAE,YAAY;EACrBC,KAAK,EAAE;EACP;AACF,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAEL,KAAK;EACfM,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,6CAA6C;EAC1DC,OAAO,EAAE,iBAAiB;EAC1BC,KAAK,EAAE;EACP;AACF;AACA;AAAA,CACD;;AAED,SAASC,WAAWA,CAAA,EAAG;EACrB;EACA,oBACER,OAAA;IAAKS,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BV,OAAA;MAAKS,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCV,OAAA;QAAAU,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtBb,YAAY,CAACc,GAAG,CAAEC,OAAO,iBACxBhB,OAAA,CAACL,OAAO;QAENO,EAAE,EAAEc,OAAO,CAACd,EAAG;QACfC,QAAQ,EAAEa,OAAO,CAACb,QAAS;QAC3Bc,KAAK,EAAG,aAAYD,OAAO,CAACZ,QAAS,EAAE;QACvCA,QAAQ,EAAEY,OAAO,CAACZ,QAAS;QAC3BC,WAAW,EAAEW,OAAO,CAACX,WAAY;QACjCC,OAAO,EAAEU,OAAO,CAACV,OAAQ;QACzBC,KAAK,EAAES,OAAO,CAACT;QACf;MAAA,GARKS,OAAO,CAACd,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAShB,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACI,EAAA,GAtBQV,WAAW;AAwBpB,eAAeA,WAAW;;AAa1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}