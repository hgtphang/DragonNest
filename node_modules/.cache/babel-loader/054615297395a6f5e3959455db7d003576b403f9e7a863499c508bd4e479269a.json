{"ast":null,"code":"var _jsxFileName = \"/Users/huydang/Desktop/project102/dragonnest/src/components/Detail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// Additional imports may go here (e.g., components, styles, utilities)\n\n// Detail component for displaying the full details of a listing.\n// It expects an 'id' prop which should be the unique identifier for a listing.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Detail({\n  id\n}) {\n  _s();\n  // State 'detailData' holds the detailed information about the listing.\n  // Initially, it's set to null indicating that no data has been fetched yet.\n  const [detailData, setDetailData] = useState(null);\n\n  // State 'error' is used to store any error messages if the data fetch fails.\n  const [error, setError] = useState(null);\n\n  // The useEffect hook fetches the detailed listing data when the component mounts\n  // or when the listing 'id' changes.\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // The API endpoint to fetch details should be replaced with the actual endpoint.\n        // This should return details for a single listing based on the 'id' provided.\n        const response = await fetch(`/api/listings/${id}`);\n        if (!response.ok) {\n          throw new Error('Data could not be fetched');\n        } else {\n          const data = await response.json();\n          setDetailData(data); // Update the state with the fetched data\n        }\n      } catch (err) {\n        setError(err.message); // If there is an error, set the error state\n      }\n    };\n\n    fetchData(); // Call the fetchData function to trigger data fetching\n  }, [id]); // The dependency array contains 'id' to refetch when it changes\n\n  // Conditional rendering for error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this); // Display error message if fetching data fails\n  }\n\n  // Conditional rendering for loading state\n  if (!detailData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this); // Show a loading message while data is being fetched\n  }\n\n  // Render the detailed information of the listing using the fetched 'detailData'.\n  // This section should be replaced with the actual markup based on your application's design.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: detailData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: detailData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: detailData.imageUrl,\n      alt: detailData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Price: \", detailData.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Bedrooms: \", detailData.bedrooms]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Bathrooms: \", detailData.bathrooms]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Pets Allowed: \", detailData.petsAllowed ? 'Yes' : 'No']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Contact Information:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: detailData.contactName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: detailData.contactEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Detail, \"Sf/mo+Fi9ZY+BGJmAYkYvhHf1bs=\");\n_c = Detail;\nexport default Detail; // Export the Detail component for use in other parts of the app\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Detail","id","_s","detailData","setDetailData","error","setError","fetchData","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","src","imageUrl","alt","price","bedrooms","bathrooms","petsAllowed","contactName","contactEmail","_c","$RefreshReg$"],"sources":["/Users/huydang/Desktop/project102/dragonnest/src/components/Detail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// Additional imports may go here (e.g., components, styles, utilities)\n\n// Detail component for displaying the full details of a listing.\n// It expects an 'id' prop which should be the unique identifier for a listing.\nfunction Detail({ id }) {\n  // State 'detailData' holds the detailed information about the listing.\n  // Initially, it's set to null indicating that no data has been fetched yet.\n  const [detailData, setDetailData] = useState(null);\n  \n  // State 'error' is used to store any error messages if the data fetch fails.\n  const [error, setError] = useState(null);\n\n  // The useEffect hook fetches the detailed listing data when the component mounts\n  // or when the listing 'id' changes.\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // The API endpoint to fetch details should be replaced with the actual endpoint.\n        // This should return details for a single listing based on the 'id' provided.\n        const response = await fetch(`/api/listings/${id}`);\n        if (!response.ok) {\n          throw new Error('Data could not be fetched');\n        } else {\n          const data = await response.json();\n          setDetailData(data); // Update the state with the fetched data\n        }\n      } catch (err) {\n        setError(err.message); // If there is an error, set the error state\n      }\n    };\n\n    fetchData(); // Call the fetchData function to trigger data fetching\n  }, [id]); // The dependency array contains 'id' to refetch when it changes\n\n  // Conditional rendering for error state\n  if (error) {\n    return <div>Error: {error}</div>; // Display error message if fetching data fails\n  }\n\n  // Conditional rendering for loading state\n  if (!detailData) {\n    return <div>Loading...</div>; // Show a loading message while data is being fetched\n  }\n\n  // Render the detailed information of the listing using the fetched 'detailData'.\n  // This section should be replaced with the actual markup based on your application's design.\n  return (\n    <div>\n      <h2>{detailData.title}</h2> {/* Display the title of the listing */}\n      <p>{detailData.description}</p> {/* Display the description of the listing */}\n      \n      {/* Display other relevant details of the listing */}\n      <img src={detailData.imageUrl} alt={detailData.title} />\n      <span>Price: {detailData.price}</span>\n      <span>Bedrooms: {detailData.bedrooms}</span>\n      <span>Bathrooms: {detailData.bathrooms}</span>\n      <span>Pets Allowed: {detailData.petsAllowed ? 'Yes' : 'No'}</span>\n      \n      {/* Contact information section */}\n      <div>\n        <h3>Contact Information:</h3>\n        <p>{detailData.contactName}</p>\n        <p>{detailData.contactEmail}</p>\n        {/* If available, add more contact details like phone number here */}\n      </div>\n    </div>\n  );\n}\n\nexport default Detail; // Export the Detail component for use in other parts of the app\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}